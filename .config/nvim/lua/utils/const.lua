local M = {}

M.filetype = {}
M.filetype.ignored_map = {
	[''] = true,
	notify = true, -- LazyVim notifications
	noice = true, -- Noice UI
	mason = true,
	lazy = true,
	help = true,
	noice = true,
	nofile = true,
	dashboard = true,
	alpha = true,
	about = true,
	DressingInput = true,
	DressingSelect = true,
	qf = true, -- Quickfix
	PlenaryTestPopup = true,
	checkhealth = true,
	dbout = true,
	lspinfo = true,
	spectre_panel = true,
	startuptime = true,
	tsplayground = true,
	['gitsigns-blame'] = true,
	['grug-far'] = true,
	['neotest-output'] = true,
	['neotest-output-panel'] = true,
	['neotest-summary'] = true,
	['copilot-chat'] = true,
	undotree = true,
	undotreeDiff = true,
	netrw = true,
	tutor = true,
	Undotree = true,
	UndotreeDiff = true,
	oil = true,
	snacks_picker_input = true,
	ministarter = true,
	snacks_dashboard = true,
	dropbar_menu = true,
	man = true,
}
M.filetype.ignored_list = vim.tbl_keys(M.filetype.ignored_map) ---@type string[]

M.filetype.document_map = {
	markdown = true,
	mdx = true,
	vimwiki = true,
	latex = true,
	help = true,
	text = true,
	tex = true,
}
M.filetype.document_list = vim.tbl_keys(M.filetype.document_map)

M.buftype = {}
M.buftype.ignored_map = {
	[''] = true,
	nofile = true,
	terminal = true,
	help = true,
	prompt = true,
}
M.buftype.ignored_list = vim.tbl_keys(M.buftype.ignored_map) ---@type string[]

M.snacks = {}
M.snacks.disabled_default_keys = {
	a = false,
	d = false,
	r = false,
	c = false,
	m = false,
	o = false,
	P = false,
	y = false,
	p = false,
	u = false,
	I = false,
	H = false,
	Z = false,
}
M.snacks.excludes = {
	'**/.git/*',
	'**/node_modules/*',
}

M.bufferline = {}
M.bufferline.transparent_bg_highlights = {
	'fill',
	'tab',
	'buffer',
	'numbers',
	'modified',
	'tab_close',
	'separator',
	'background',
	'diagnostic',
	'close_button',
	'hint_visible',
	'info_visible',
	'trunc_marker',
	'error_visible',
	'tab_separator',
	'buffer_visible',
	'group_separator',
	'numbers_visible',
	'warning_visible',
	'modified_visible',
	'offset_separator',
	'indicator_visible',
	'separator_visible',
	'diagnostic_visible',
	'close_button_visible',
	'hint_diagnostic_visible',
	'info_diagnostic_visible',
	'error_diagnostic_visible',
	'warning_diagnostic_visible',
	'hint',
	'info',
	'error',
	'warning',
	'hint_diagnostic',
	'info_diagnostic',
	'error_diagnostic',
	'warning_diagnostic',
	'duplicate',
	'duplicate_visible',
	'tab_selected',
	'modified_selected',
	'pick',
	'indicator_selected',
	'separator_selected',
	'close_button_selected',
	'tab_separator_selected',
	'pick_visible',
	'duplicate_selected',
	'hint_selected',
	'info_selected',
	'pick_selected',
	'error_selected',
	'buffer_selected',
	'numbers_selected',
	'warning_selected',
	'diagnostic_selected',
	'hint_diagnostic_selected',
	'info_diagnostic_selected',
	'error_diagnostic_selected',
	'warning_diagnostic_selected',
}
M.bufferline.underline_highlights = {
	'tab_selected',
	'modified_selected',
	'indicator_selected',
	'separator_selected',
	'close_button_selected',
	'tab_separator_selected',
	'duplicate_selected',
	'hint_selected',
	'info_selected',
	'pick_selected',
	'error_selected',
	'buffer_selected',
	'numbers_selected',
	'warning_selected',
	'diagnostic_selected',
	'hint_diagnostic_selected',
	'info_diagnostic_selected',
	'error_diagnostic_selected',
	'warning_diagnostic_selected',
}

return M
